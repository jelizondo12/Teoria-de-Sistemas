//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class NorthwindEntities : DbContext
    {
        public NorthwindEntities()
            : base("name=NorthwindEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<BILLS> BILLS { get; set; }
        public DbSet<Categories> Categories { get; set; }
        public DbSet<Customers> Customers { get; set; }
        public DbSet<Employees> Employees { get; set; }
        public DbSet<Order_Details> Order_Details { get; set; }
        public DbSet<Orders> Orders { get; set; }
        public DbSet<Pedidos> Pedidos { get; set; }
        public DbSet<Products> Products { get; set; }
        public DbSet<PURCHASE_ORDER> PURCHASE_ORDER { get; set; }
        public DbSet<Region> Region { get; set; }
        public DbSet<ROL> ROL { get; set; }
        public DbSet<SALES> SALES { get; set; }
        public DbSet<Security> Security { get; set; }
        public DbSet<Shippers> Shippers { get; set; }
        public DbSet<Suppliers> Suppliers { get; set; }
        public DbSet<Territories> Territories { get; set; }
        public DbSet<USERS> USERS { get; set; }
    
        public virtual ObjectResult<sp_Proyecto_ActualizarInventario_Result> sp_Proyecto_ActualizarInventario(Nullable<int> opcion, Nullable<int> iD, Nullable<int> cantidad)
        {
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_ActualizarInventario_Result>("sp_Proyecto_ActualizarInventario", opcionParameter, iDParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_CargarSupplier_Result> sp_Proyecto_CargarSupplier()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_CargarSupplier_Result>("sp_Proyecto_CargarSupplier");
        }
    
        public virtual ObjectResult<sp_Proyecto_CargarUsuarios_Result> sp_Proyecto_CargarUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_CargarUsuarios_Result>("sp_Proyecto_CargarUsuarios");
        }
    
        public virtual ObjectResult<sp_Proyecto_EliminarPedido_Result> sp_Proyecto_EliminarPedido(Nullable<int> idPedido)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_EliminarPedido_Result>("sp_Proyecto_EliminarPedido", idPedidoParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_EliminarProducto_Result> sp_Proyecto_EliminarProducto(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_EliminarProducto_Result>("sp_Proyecto_EliminarProducto", productIDParameter);
        }
    
        public virtual int sp_Proyecto_EliminarUsuario(Nullable<int> identificacion)
        {
            var identificacionParameter = identificacion.HasValue ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Proyecto_EliminarUsuario", identificacionParameter);
        }
    
        public virtual int sp_Proyecto_InsertarUsuario(Nullable<int> identificacion, string nombre, string pApellido, string sApellido, string fechaNacimiento, Nullable<int> telefono, string correo, string direccion, Nullable<System.DateTime> createDate)
        {
            var identificacionParameter = identificacion.HasValue ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var pApellidoParameter = pApellido != null ?
                new ObjectParameter("pApellido", pApellido) :
                new ObjectParameter("pApellido", typeof(string));
    
            var sApellidoParameter = sApellido != null ?
                new ObjectParameter("sApellido", sApellido) :
                new ObjectParameter("sApellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("createDate", createDate) :
                new ObjectParameter("createDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Proyecto_InsertarUsuario", identificacionParameter, nombreParameter, pApellidoParameter, sApellidoParameter, fechaNacimientoParameter, telefonoParameter, correoParameter, direccionParameter, createDateParameter);
        }
    
        public virtual int sp_Proyecto_InsertarUsuarioSecurity(Nullable<int> identificacion, string nombreUsuario, string clave, string tipoUsuario, string token)
        {
            var identificacionParameter = identificacion.HasValue ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(int));
    
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var tipoUsuarioParameter = tipoUsuario != null ?
                new ObjectParameter("tipoUsuario", tipoUsuario) :
                new ObjectParameter("tipoUsuario", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Proyecto_InsertarUsuarioSecurity", identificacionParameter, nombreUsuarioParameter, claveParameter, tipoUsuarioParameter, tokenParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_ModificarContra_Result> sp_Proyecto_ModificarContra(Nullable<int> opcion, Nullable<int> iD_usuario, string nuevacontra)
        {
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(int));
    
            var iD_usuarioParameter = iD_usuario.HasValue ?
                new ObjectParameter("ID_usuario", iD_usuario) :
                new ObjectParameter("ID_usuario", typeof(int));
    
            var nuevacontraParameter = nuevacontra != null ?
                new ObjectParameter("nuevacontra", nuevacontra) :
                new ObjectParameter("nuevacontra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_ModificarContra_Result>("sp_Proyecto_ModificarContra", opcionParameter, iD_usuarioParameter, nuevacontraParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_ModificarPedido_Result> sp_Proyecto_ModificarPedido(Nullable<int> idPedido, Nullable<int> productID, string productName, string category, Nullable<int> cantidad, Nullable<decimal> unitPrice, string fechaPedido, string usuario)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var fechaPedidoParameter = fechaPedido != null ?
                new ObjectParameter("FechaPedido", fechaPedido) :
                new ObjectParameter("FechaPedido", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_ModificarPedido_Result>("sp_Proyecto_ModificarPedido", idPedidoParameter, productIDParameter, productNameParameter, categoryParameter, cantidadParameter, unitPriceParameter, fechaPedidoParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_ModificarProducto_Result> sp_Proyecto_ModificarProducto(Nullable<int> productID, string productName, Nullable<int> supplierID, Nullable<int> categoryID, string quantityPerUnit, Nullable<decimal> unitPrice, Nullable<short> unitsInStock, Nullable<short> unitsOnOrder, Nullable<short> reorderLevel, string discontinued, string pRODUCT_STATUS)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var quantityPerUnitParameter = quantityPerUnit != null ?
                new ObjectParameter("QuantityPerUnit", quantityPerUnit) :
                new ObjectParameter("QuantityPerUnit", typeof(string));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var unitsInStockParameter = unitsInStock.HasValue ?
                new ObjectParameter("UnitsInStock", unitsInStock) :
                new ObjectParameter("UnitsInStock", typeof(short));
    
            var unitsOnOrderParameter = unitsOnOrder.HasValue ?
                new ObjectParameter("UnitsOnOrder", unitsOnOrder) :
                new ObjectParameter("UnitsOnOrder", typeof(short));
    
            var reorderLevelParameter = reorderLevel.HasValue ?
                new ObjectParameter("ReorderLevel", reorderLevel) :
                new ObjectParameter("ReorderLevel", typeof(short));
    
            var discontinuedParameter = discontinued != null ?
                new ObjectParameter("Discontinued", discontinued) :
                new ObjectParameter("Discontinued", typeof(string));
    
            var pRODUCT_STATUSParameter = pRODUCT_STATUS != null ?
                new ObjectParameter("PRODUCT_STATUS", pRODUCT_STATUS) :
                new ObjectParameter("PRODUCT_STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_ModificarProducto_Result>("sp_Proyecto_ModificarProducto", productIDParameter, productNameParameter, supplierIDParameter, categoryIDParameter, quantityPerUnitParameter, unitPriceParameter, unitsInStockParameter, unitsOnOrderParameter, reorderLevelParameter, discontinuedParameter, pRODUCT_STATUSParameter);
        }
    
        public virtual int sp_Proyecto_ModificarUsuario(Nullable<int> identificacion, string nombre, string pApellido, string sApellido, string nombreUsuario, string fechaNacimiento, Nullable<int> telefono, string correo, string direccion, string clave, string tipoUsuario, Nullable<System.DateTime> createDate, string token)
        {
            var identificacionParameter = identificacion.HasValue ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var pApellidoParameter = pApellido != null ?
                new ObjectParameter("pApellido", pApellido) :
                new ObjectParameter("pApellido", typeof(string));
    
            var sApellidoParameter = sApellido != null ?
                new ObjectParameter("sApellido", sApellido) :
                new ObjectParameter("sApellido", typeof(string));
    
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var tipoUsuarioParameter = tipoUsuario != null ?
                new ObjectParameter("tipoUsuario", tipoUsuario) :
                new ObjectParameter("tipoUsuario", typeof(string));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("createDate", createDate) :
                new ObjectParameter("createDate", typeof(System.DateTime));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Proyecto_ModificarUsuario", identificacionParameter, nombreParameter, pApellidoParameter, sApellidoParameter, nombreUsuarioParameter, fechaNacimientoParameter, telefonoParameter, correoParameter, direccionParameter, claveParameter, tipoUsuarioParameter, createDateParameter, tokenParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Proyecto_MostrarNumeroPedido(Nullable<int> idPedido)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Proyecto_MostrarNumeroPedido", idPedidoParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_Reporte_Clientes_Result> sp_Proyecto_Reporte_Clientes(Nullable<int> opcion, string iD)
        {
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(int));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_Reporte_Clientes_Result>("sp_Proyecto_Reporte_Clientes", opcionParameter, iDParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_Reporte_Empleados_Result> sp_Proyecto_Reporte_Empleados(Nullable<int> opcion, Nullable<int> iD)
        {
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_Reporte_Empleados_Result>("sp_Proyecto_Reporte_Empleados", opcionParameter, iDParameter);
        }
    
        public virtual int sp_Proyecto_Reporte_Facturas(Nullable<int> opcion, Nullable<int> iD)
        {
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Proyecto_Reporte_Facturas", opcionParameter, iDParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_Reporte_Inventario_Result> sp_Proyecto_Reporte_Inventario(Nullable<int> opcion, Nullable<int> iD)
        {
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_Reporte_Inventario_Result>("sp_Proyecto_Reporte_Inventario", opcionParameter, iDParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_Reporte_Pedidos_Result> sp_Proyecto_Reporte_Pedidos(Nullable<int> opcion, Nullable<int> iD)
        {
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_Reporte_Pedidos_Result>("sp_Proyecto_Reporte_Pedidos", opcionParameter, iDParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_Reporte_Proveedores_Result> sp_Proyecto_Reporte_Proveedores(Nullable<int> opcion, Nullable<int> iD)
        {
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_Reporte_Proveedores_Result>("sp_Proyecto_Reporte_Proveedores", opcionParameter, iDParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_Reporte_Usuarios_Result> sp_Proyecto_Reporte_Usuarios(Nullable<int> opcion, Nullable<int> iD)
        {
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_Reporte_Usuarios_Result>("sp_Proyecto_Reporte_Usuarios", opcionParameter, iDParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_Reporte_Ventas_Result> sp_Proyecto_Reporte_Ventas(Nullable<int> opcion, Nullable<int> iD)
        {
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_Reporte_Ventas_Result>("sp_Proyecto_Reporte_Ventas", opcionParameter, iDParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_SeleccionarPedido_Result> sp_Proyecto_SeleccionarPedido(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_SeleccionarPedido_Result>("sp_Proyecto_SeleccionarPedido", productIDParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_SeleccionarTablaPedidos_Result> sp_Proyecto_SeleccionarTablaPedidos(Nullable<int> idPedido)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_SeleccionarTablaPedidos_Result>("sp_Proyecto_SeleccionarTablaPedidos", idPedidoParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_VerificarProductoModificar_Result> sp_Proyecto_VerificarProductoModificar(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_VerificarProductoModificar_Result>("sp_Proyecto_VerificarProductoModificar", productIDParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_VerificarSesion_Result> sp_Proyecto_VerificarSesion(string nombreUsuario)
        {
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_VerificarSesion_Result>("sp_Proyecto_VerificarSesion", nombreUsuarioParameter);
        }
    
        public virtual ObjectResult<sp_Proyecto_VerificarUsuarioModificar_Result> sp_Proyecto_VerificarUsuarioModificar(Nullable<int> identificacion)
        {
            var identificacionParameter = identificacion.HasValue ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Proyecto_VerificarUsuarioModificar_Result>("sp_Proyecto_VerificarUsuarioModificar", identificacionParameter);
        }
    
        public virtual ObjectResult<sp_ProyectoEliminarProducto_Result> sp_ProyectoEliminarProducto(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProyectoEliminarProducto_Result>("sp_ProyectoEliminarProducto", productIDParameter);
        }
    
        public virtual ObjectResult<sp_ProyectoGenerarFactura_Result> sp_ProyectoGenerarFactura(string custumerID, Nullable<System.DateTime> fecha)
        {
            var custumerIDParameter = custumerID != null ?
                new ObjectParameter("CustumerID", custumerID) :
                new ObjectParameter("CustumerID", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProyectoGenerarFactura_Result>("sp_ProyectoGenerarFactura", custumerIDParameter, fechaParameter);
        }
    }
}
